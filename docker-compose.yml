services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: dld-backend
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./dld_optimization.db}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:8501,http://127.0.0.1:8501}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dld-network

  # Frontend Streamlit service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: dld-frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dld-network

  # Optional: Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: dld-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /home/ec2-user/dldml/certbot-www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - dld-network
    profiles:
      - production

networks:
  dld-network:
    driver: bridge

volumes:
  logs:
  data: 